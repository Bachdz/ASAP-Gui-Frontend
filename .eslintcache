[{"C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\index.js":"1","C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\App.js":"2","C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\reportWebVitals.js":"3","C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\components\\fragments\\Footer.js":"4","C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\components\\loginscreen\\Login.js":"5","C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\components\\mainscreen\\Main.js":"6","C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\components\\loginscreen\\subcomponents\\Peer.js":"7","C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\components\\loginscreen\\subcomponents\\CreateUser.js":"8","C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\components\\mainscreen\\subcomponents\\Apps.js":"9","C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\components\\fragments\\Terminal.js":"10","C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\components\\mainscreen\\subcomponents\\Channels.js":"11","C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\components\\mainscreen\\subcomponents\\Messages.js":"12","C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\components\\mainscreen\\subcomponents\\MessageBox.js":"13"},{"size":517,"mtime":1607640335941,"results":"14","hashOfConfig":"15"},{"size":1151,"mtime":1608196621600,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1607640335942,"results":"17","hashOfConfig":"15"},{"size":541,"mtime":1607640335939,"results":"18","hashOfConfig":"15"},{"size":3430,"mtime":1608291547161,"results":"19","hashOfConfig":"15"},{"size":4699,"mtime":1609254232684,"results":"20","hashOfConfig":"15"},{"size":1142,"mtime":1607687887564,"results":"21","hashOfConfig":"15"},{"size":2545,"mtime":1607687876572,"results":"22","hashOfConfig":"15"},{"size":5207,"mtime":1609253728140,"results":"23","hashOfConfig":"15"},{"size":467,"mtime":1608215305713,"results":"24","hashOfConfig":"15"},{"size":7819,"mtime":1609436687709,"results":"25","hashOfConfig":"15"},{"size":3339,"mtime":1609436656294,"results":"26","hashOfConfig":"15"},{"size":1437,"mtime":1609434752460,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1u18oea",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},"C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\index.js",[],["58","59"],"C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\App.js",[],"C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\reportWebVitals.js",[],"C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\components\\fragments\\Footer.js",[],"C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\components\\loginscreen\\Login.js",["60"],"import React, { Component } from 'react';\r\nimport Peer from './subcomponents/Peer';\r\nimport CreateUser from './subcomponents/CreateUser';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Terminal from '../fragments/Terminal';\r\n\r\n\r\n\r\nimport '../../css/loginscreen/Login.css';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        peers: [],\r\n        alertopen: false,\r\n        alertmsg: '',\r\n        alerttype: '',\r\n        consolelog: []\r\n    }\r\n\r\n\r\n    getLog = () => {\r\n        axios.get('http://localhost:8080/api/v1/asap/logdata')\r\n            .then(res => this.setState({ consolelog: res.data }))\r\n    }\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            axios.get('http://localhost:8080/api/v1/asap/peers')\r\n                .then(res => this.setState({ peers: res.data }))\r\n            this.getLog();\r\n        }, 2000);\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    //create User\r\n    addUser = (userName) => {\r\n        let url = 'http://localhost:8080/api/v1/asap/peer?name=' + userName;\r\n        axios.post(url)\r\n            .then(res => this.setState({ peers: [...this.state.peers, res.data] }, () => this.getLog())\r\n            )\r\n\r\n    }\r\n\r\n    //remove all users\r\n    removeAllUser = () => {\r\n        axios.delete('http://localhost:8080/api/v1/asap/peers')\r\n            .then(res => {\r\n                if (res.data === false) {\r\n                    this.setState({ alertopen: !this.state.alertopen, alertmsg: \"Couldn't delete peers\", alerttype: \"error\" }, () => this.getLog());\r\n\r\n                } else if (res.data === true) {\r\n                    this.setState({ alertopen: !this.state.alertopen, alertmsg: \"Deleted successfully \", alerttype: \"success\" });\r\n                    axios.get('http://localhost:8080/api/v1/asap/peers')\r\n                        .then(res => this.setState({ peers: res.data }, () => this.getLog()))\r\n                }\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n            )\r\n\r\n\r\n\r\n    }\r\n\r\n    handleClose = (event, reason) => {\r\n        this.setState({ alertopen: !this.state.alertopen });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { alertopen, alertmsg, alerttype } = this.state;\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"background-container\">\r\n                    <div className=\"content\">\r\n                        <div className=\"login-container\">\r\n                            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }} open={alertopen} autoHideDuration={2000} onClose={this.handleClose}>\r\n                                <Alert onClose={this.handleClose} severity={alerttype}>\r\n                                    {alertmsg}\r\n                                </Alert>\r\n                            </Snackbar>\r\n                            <h1>Please choose a peer</h1>\r\n                            <Peer peers={this.state.peers} />\r\n\r\n                            <div id=\"remove-peer\">\r\n                                <CloseIcon id=\"remove\" onClick={this.removeAllUser} /> Remove all peers\r\n            </div>\r\n                            <CreateUser addUser={this.addUser} />\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <Terminal consolelog={this.state.consolelog} />\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Login;","C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\components\\mainscreen\\Main.js",["61"],"import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Apps from './subcomponents/Apps';\r\nimport axios from 'axios';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Terminal from '../fragments/Terminal';\r\nimport Messages from './subcomponents/Messages';\r\n//import css-File\r\nimport '../../css/mainscreen/Main.css';\r\n\r\n\r\n\r\n\r\n\r\nclass Main extends Component {\r\n\r\n\r\n    state = {\r\n        username: this.props.location.state ? this.props.location.state.peer : \"\",\r\n        apps: [],\r\n        alertopen: false,\r\n        alertmsg: '',\r\n        alerttype: '',\r\n        channelSelected: false,\r\n        appSelected: false,\r\n        consolelog: [],\r\n        appSelected: '',\r\n        channelUriSelected: ''\r\n    }\r\n\r\n    doCreateApp = (newApp) => {\r\n        let url = 'http://localhost:8080/api/v1/asap/app?peer=' + this.state.username + '&app=' + newApp;\r\n        console.log(url)\r\n        axios.post(url)\r\n            .then(res => {\r\n                res.data === null ?\r\n                    this.setState({ alertopen: !this.state.alertopen, alertmsg: \"Something went wrong: Couldn't create the app workspace\", alerttype: \"error\" })\r\n                    :\r\n                    this.setState({ alertopen: !this.state.alertopen, alertmsg: \"App created successfully \", alerttype: \"success\", apps: [...this.state.apps, res.data] })\r\n            })\r\n    }\r\n\r\n    showMainScreen = (appName, channel, channelSelected) => {\r\n        this.setState({ channelSelected: channelSelected, appSelected: appName, channelUriSelected: channel.uri })\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        axios.get('http://localhost:8080/api/v1/asap/storages?peer=' + this.state.username)\r\n            .then(res => this.setState({ apps: res.data }))\r\n        this.getLog();\r\n    }\r\n\r\n    getLog = () => {\r\n        axios.get('http://localhost:8080/api/v1/asap/logdata')\r\n            .then(res => this.setState({ consolelog: res.data }))\r\n    }\r\n\r\n\r\n    handleClose = (event, reason) => {\r\n        this.setState({ alertopen: !this.state.alertopen });\r\n    }\r\n\r\n    render() {\r\n        const { username, alertmsg, alertopen, alerttype, channelSelected, appSelected } = this.state;\r\n\r\n\r\n        const toggleMainScreen = (appSelected) => {\r\n            this.setState({ appSelected: appSelected, channelSelected: false });\r\n        }\r\n        if (username === undefined || username === \"\") {\r\n            return <Redirect to=\"/login\" />;\r\n        } else {\r\n            return (\r\n                <div class=\"main\">\r\n                    <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }} open={alertopen} autoHideDuration={2000} onClose={this.handleClose}>\r\n                        <Alert onClose={this.handleClose} severity={alerttype}>\r\n                            {alertmsg}\r\n                        </Alert>\r\n                    </Snackbar>\r\n                    <div id=\"bar\"></div>\r\n                    <div class=\"main-content\">\r\n                        <section class=\"navigation\">\r\n                            <div class=\"user-info\">\r\n                                <AccountCircleIcon id=\"accountIcon\" />\r\n                           Welcome  <b> {this.state.username}</b>\r\n                                <Link to=\"/login\" className=\"exit\">     <ExitToAppIcon id=\"exit-icon\" className=\"icon\" /> </Link>\r\n                            </div>\r\n\r\n                            <div className=\"main-items\">\r\n\r\n                                <Apps apps={this.state.apps} doCreateApp={this.doCreateApp} username={username} showMainScreen={this.showMainScreen} toggleMainScreen={toggleMainScreen} />\r\n\r\n\r\n\r\n\r\n                            </div>\r\n                        </section>\r\n                        <section class=\"main-screen\">\r\n                            {\r\n                                channelSelected && appSelected ?\r\n\r\n                                    <Messages userName={this.state.username} channelUriSelected={this.state.channelUriSelected} appSelected={this.state.appSelected} />\r\n                                    :\r\n                                    null\r\n\r\n                            }\r\n\r\n                        </section>\r\n\r\n                        <section class=\"connection-bar\">\r\n\r\n\r\n\r\n                        </section>\r\n\r\n\r\n                    </div>\r\n                    <Terminal consolelog={this.state.consolelog} />\r\n\r\n                </div>\r\n            );\r\n        }\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Main;","C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\components\\loginscreen\\subcomponents\\Peer.js",[],"C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\components\\loginscreen\\subcomponents\\CreateUser.js",[],"C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\components\\mainscreen\\subcomponents\\Apps.js",[],"C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\components\\fragments\\Terminal.js",[],"C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\components\\mainscreen\\subcomponents\\Channels.js",["62"],"C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\components\\mainscreen\\subcomponents\\Messages.js",[],"C:\\Users\\xuanb\\Desktop\\BA\\ASAP-Gui-Frontend\\src\\components\\mainscreen\\subcomponents\\MessageBox.js",["63","64"],"import React, { useState } from 'react'\r\n\r\nexport default function MessageBox(props) {\r\n\r\n    const [textt, setText] = useState('default')\r\n\r\n    const onEnterPress = (e) => {\r\n        if (e.keyCode === 13 && e.shiftKey === false) {\r\n            e.preventDefault();\r\n            props.createNewMess(e)\r\n        }\r\n    }\r\n    const textOnChange = (e) => {\r\n        setText(setText(e.target.value));\r\n        console.log('val', textt);\r\n    }\r\n    const keyD = (e) => {\r\n        if (e.keyCode === 13 && e.shiftKey === false) {\r\n            setText('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div class=\"message-box\">\r\n\r\n            <form onSubmit={props.createNewMess}>\r\n                {/*     {props.resetMessValue ?\r\n                    <textarea value={props.resetMess} name=\"1\" type=\"text\" class=\"message-input\" placeholder=\"Type message...\" onChange={props.getMessValue} onKeyDown={onEnterPress}></textarea>\r\n                    :\r\n                    <textarea type=\"text\" class=\"message-input\" placeholder=\"Type message...\" onChange={props.getMessValue} onKeyDown={onEnterPress}></textarea>\r\n\r\n                } */}\r\n                <textarea value={textt} name=\"1\" type=\"text\" class=\"message-input\" placeholder=\"Type message...\" onChange={(e) => setText(e.target.value)} onKeyDown={keyD}></textarea>\r\n\r\n                <button type=\"submit\" class=\"message-submit\" >Add</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":26},{"ruleId":"73","severity":1,"message":"74","line":32,"column":9,"nodeType":"75","messageId":"76","endLine":32,"endColumn":20},{"ruleId":"73","severity":1,"message":"77","line":41,"column":9,"nodeType":"75","messageId":"76","endLine":41,"endColumn":23},{"ruleId":"69","severity":1,"message":"78","line":7,"column":11,"nodeType":"71","messageId":"72","endLine":7,"endColumn":23},{"ruleId":"69","severity":1,"message":"79","line":13,"column":11,"nodeType":"71","messageId":"72","endLine":13,"endColumn":23},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'appSelected'.","ObjectExpression","unexpected","Duplicate key 'openAddChannel'.","'onEnterPress' is assigned a value but never used.","'textOnChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]